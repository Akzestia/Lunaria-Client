// /qt/qml/LunariaClient/EventListSimulator.qml
#include <QtQml/qqmlprivate.h>
#include <QtCore/qdatetime.h>
#include <QtCore/qobject.h>
#include <QtCore/qstring.h>
#include <QtCore/qstringlist.h>
#include <QtCore/qurl.h>
#include <QtCore/qvariant.h>
#include <QtQml/qjsengine.h>
#include <QtQml/qjsprimitivevalue.h>
#include <QtQml/qjsvalue.h>
#include <QtQml/qqmlcomponent.h>
#include <QtQml/qqmlcontext.h>
#include <QtQml/qqmlengine.h>
#include <QtQml/qqmllist.h>
#include <type_traits>
namespace QmlCacheGeneratedCode {
namespace _qt_qml_LunariaClient_EventListSimulator_qml {
extern const unsigned char qmlData alignas(16) [];
extern const unsigned char qmlData alignas(16) [] = {

0x71,0x76,0x34,0x63,0x64,0x61,0x74,0x61,
0x3b,0x0,0x0,0x0,0x3,0x5,0x6,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xc0,0x7,0x0,0x0,0x64,0x66,0x61,0x33,
0x35,0x33,0x32,0x33,0x62,0x66,0x31,0x30,
0x63,0x38,0x66,0x30,0x35,0x32,0x63,0x30,
0x64,0x33,0x38,0x65,0x66,0x30,0x34,0x62,
0x37,0x62,0x32,0x39,0x61,0x63,0x30,0x65,
0x34,0x64,0x66,0x35,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x5,0xac,0x98,0x9a,
0xe6,0x3b,0x5,0x31,0x9,0x78,0x5,0xd1,
0x8d,0x16,0x9e,0xbe,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x23,0x0,0x0,0x0,
0x18,0x0,0x0,0x0,0x70,0x2,0x0,0x0,
0x2,0x0,0x0,0x0,0xf8,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,
0x2,0x0,0x0,0x0,0x0,0x1,0x0,0x0,
0xa,0x0,0x0,0x0,0x8,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x30,0x1,0x0,0x0,
0x1,0x0,0x0,0x0,0x30,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x38,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x38,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x38,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x38,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x38,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x38,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x38,0x1,0x0,0x0,
0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xb8,0x5,0x0,0x0,
0x38,0x1,0x0,0x0,0xa8,0x1,0x0,0x0,
0x50,0x2,0x0,0x0,0x60,0x2,0x0,0x0,
0x3,0x1,0x0,0x0,0x14,0x1,0x0,0x0,
0x23,0x1,0x0,0x0,0x43,0x1,0x0,0x0,
0x54,0x1,0x0,0x0,0x34,0x1,0x0,0x0,
0x53,0x0,0x0,0x0,0x60,0x0,0x0,0x0,
0x93,0x0,0x0,0x0,0x74,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x40,0xac,0x3f,
0x5c,0x0,0x0,0x0,0x10,0x0,0x0,0x0,
0xc,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x3,0x0,
0xff,0xff,0xff,0xff,0xa,0x0,0x0,0x0,
0xf,0x0,0x90,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xf,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0x10,0x0,0x0,0x0,0x2,0x0,0x0,0x0,
0xc,0x0,0x0,0x0,0x11,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0xca,0x2e,0x0,0x18,
0x7,0xac,0x1,0x7,0x0,0x0,0x18,0x6,
0xd4,0x16,0x6,0x2,0x0,0x0,0x0,0x0,
0x74,0x0,0x0,0x0,0x2e,0x0,0x0,0x0,
0xf,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x5,0x0,
0xff,0xff,0xff,0xff,0xf,0x0,0x0,0x0,
0x14,0x0,0x50,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x14,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0x15,0x0,0x0,0x0,0x3,0x0,0x0,0x0,
0x19,0x0,0x0,0x0,0x16,0x0,0x0,0x0,
0x4,0x0,0x0,0x0,0x1f,0x0,0x0,0x0,
0x17,0x0,0x0,0x0,0x5,0x0,0x0,0x0,
0x2a,0x0,0x0,0x0,0x18,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0xca,0x2e,0x2,0x18,
0x7,0x2e,0x3,0x18,0xb,0x12,0x16,0x18,
0xe,0xac,0x4,0xb,0x1,0xe,0x18,0xa,
0xac,0x5,0x7,0x1,0xa,0x2e,0x6,0x3c,
0x7,0x50,0xb,0x2e,0x8,0x18,0x7,0xac,
0x9,0x7,0x0,0x0,0x18,0x6,0xd4,0x16,
0x6,0x2,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x10,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x10,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xd0,0x2,0x0,0x0,0xd8,0x2,0x0,0x0,
0xf0,0x2,0x0,0x0,0x30,0x3,0x0,0x0,
0x70,0x3,0x0,0x0,0x88,0x3,0x0,0x0,
0xa0,0x3,0x0,0x0,0xb8,0x3,0x0,0x0,
0xc8,0x3,0x0,0x0,0xe0,0x3,0x0,0x0,
0xf0,0x3,0x0,0x0,0x8,0x4,0x0,0x0,
0x28,0x4,0x0,0x0,0x68,0x4,0x0,0x0,
0x80,0x4,0x0,0x0,0xa0,0x4,0x0,0x0,
0xe0,0x4,0x0,0x0,0x8,0x5,0x0,0x0,
0x18,0x5,0x0,0x0,0x38,0x5,0x0,0x0,
0x48,0x5,0x0,0x0,0x58,0x5,0x0,0x0,
0x78,0x5,0x0,0x0,0xa8,0x5,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x7,0x0,0x0,0x0,0x51,0x0,0x74,0x0,
0x51,0x0,0x75,0x0,0x69,0x0,0x63,0x0,
0x6b,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x1d,0x0,0x0,0x0,0x51,0x0,0x74,0x0,
0x51,0x0,0x75,0x0,0x69,0x0,0x63,0x0,
0x6b,0x0,0x2e,0x0,0x53,0x0,0x74,0x0,
0x75,0x0,0x64,0x0,0x69,0x0,0x6f,0x0,
0x2e,0x0,0x45,0x0,0x76,0x0,0x65,0x0,
0x6e,0x0,0x74,0x0,0x53,0x0,0x69,0x0,
0x6d,0x0,0x75,0x0,0x6c,0x0,0x61,0x0,
0x74,0x0,0x6f,0x0,0x72,0x0,0x0,0x0,
0x1a,0x0,0x0,0x0,0x51,0x0,0x74,0x0,
0x51,0x0,0x75,0x0,0x69,0x0,0x63,0x0,
0x6b,0x0,0x2e,0x0,0x53,0x0,0x74,0x0,
0x75,0x0,0x64,0x0,0x69,0x0,0x6f,0x0,
0x2e,0x0,0x45,0x0,0x76,0x0,0x65,0x0,
0x6e,0x0,0x74,0x0,0x53,0x0,0x79,0x0,
0x73,0x0,0x74,0x0,0x65,0x0,0x6d,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x8,0x0,0x0,0x0,0x51,0x0,0x74,0x0,
0x4f,0x0,0x62,0x0,0x6a,0x0,0x65,0x0,
0x63,0x0,0x74,0x0,0x0,0x0,0x0,0x0,
0x9,0x0,0x0,0x0,0x73,0x0,0x69,0x0,
0x6d,0x0,0x75,0x0,0x6c,0x0,0x61,0x0,
0x74,0x0,0x6f,0x0,0x72,0x0,0x0,0x0,
0x6,0x0,0x0,0x0,0x61,0x0,0x63,0x0,
0x74,0x0,0x69,0x0,0x76,0x0,0x65,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x54,0x0,0x69,0x0,
0x6d,0x0,0x65,0x0,0x72,0x0,0x0,0x0,
0x7,0x0,0x0,0x0,0x5f,0x0,0x5f,0x0,
0x74,0x0,0x69,0x0,0x6d,0x0,0x65,0x0,
0x72,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x74,0x0,0x69,0x0,
0x6d,0x0,0x65,0x0,0x72,0x0,0x0,0x0,
0x8,0x0,0x0,0x0,0x69,0x0,0x6e,0x0,
0x74,0x0,0x65,0x0,0x72,0x0,0x76,0x0,
0x61,0x0,0x6c,0x0,0x0,0x0,0x0,0x0,
0xb,0x0,0x0,0x0,0x6f,0x0,0x6e,0x0,
0x54,0x0,0x72,0x0,0x69,0x0,0x67,0x0,
0x67,0x0,0x65,0x0,0x72,0x0,0x65,0x0,
0x64,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x1a,0x0,0x0,0x0,0x65,0x0,0x78,0x0,
0x70,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x72,0x0,
0x20,0x0,0x6f,0x0,0x6e,0x0,0x54,0x0,
0x72,0x0,0x69,0x0,0x67,0x0,0x67,0x0,
0x65,0x0,0x72,0x0,0x65,0x0,0x64,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x9,0x0,0x0,0x0,0x43,0x0,0x6f,0x0,
0x6d,0x0,0x70,0x0,0x6f,0x0,0x6e,0x0,
0x65,0x0,0x6e,0x0,0x74,0x0,0x0,0x0,
0xb,0x0,0x0,0x0,0x6f,0x0,0x6e,0x0,
0x43,0x0,0x6f,0x0,0x6d,0x0,0x70,0x0,
0x6c,0x0,0x65,0x0,0x74,0x0,0x65,0x0,
0x64,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x1a,0x0,0x0,0x0,0x65,0x0,0x78,0x0,
0x70,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x72,0x0,
0x20,0x0,0x6f,0x0,0x6e,0x0,0x43,0x0,
0x6f,0x0,0x6d,0x0,0x70,0x0,0x6c,0x0,
0x65,0x0,0x74,0x0,0x65,0x0,0x64,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xe,0x0,0x0,0x0,0x45,0x0,0x76,0x0,
0x65,0x0,0x6e,0x0,0x74,0x0,0x53,0x0,
0x69,0x0,0x6d,0x0,0x75,0x0,0x6c,0x0,
0x61,0x0,0x74,0x0,0x6f,0x0,0x72,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x4,0x0,0x0,0x0,0x73,0x0,0x68,0x0,
0x6f,0x0,0x77,0x0,0x0,0x0,0x0,0x0,
0xb,0x0,0x0,0x0,0x45,0x0,0x76,0x0,
0x65,0x0,0x6e,0x0,0x74,0x0,0x53,0x0,
0x79,0x0,0x73,0x0,0x74,0x0,0x65,0x0,
0x6d,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x4,0x0,0x0,0x0,0x69,0x0,0x6e,0x0,
0x69,0x0,0x74,0x0,0x0,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0x51,0x0,0x74,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xb,0x0,0x0,0x0,0x72,0x0,0x65,0x0,
0x73,0x0,0x6f,0x0,0x6c,0x0,0x76,0x0,
0x65,0x0,0x64,0x0,0x55,0x0,0x72,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x12,0x0,0x0,0x0,0x45,0x0,0x76,0x0,
0x65,0x0,0x6e,0x0,0x74,0x0,0x4c,0x0,
0x69,0x0,0x73,0x0,0x74,0x0,0x4d,0x0,
0x6f,0x0,0x64,0x0,0x65,0x0,0x6c,0x0,
0x2e,0x0,0x71,0x0,0x6d,0x0,0x6c,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x73,0x0,0x74,0x0,
0x61,0x0,0x72,0x0,0x74,0x0,0x0,0x0,
0x3,0x0,0x0,0x0,0x10,0x0,0x0,0x0,
0x3,0x0,0x0,0x0,0x4c,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x4,0x0,0x10,0x0,
0x2,0x6,0x0,0x0,0x1,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x5,0x0,0x10,0x0,0x0,0x1,0x0,0x0,
0x1,0x0,0x0,0x0,0x3,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x6,0x0,0x10,0x0,
0x0,0x1,0x0,0x0,0x58,0x0,0x0,0x0,
0x10,0x1,0x0,0x0,0x98,0x1,0x0,0x0,
0x4,0x0,0x0,0x0,0x5,0x0,0x0,0x0,
0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xff,
0x0,0x0,0x2,0x0,0x54,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x6c,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x6c,0x0,0x0,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x3,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xb4,0x0,0x0,0x0,0x8,0x0,0x10,0x0,
0x9,0x0,0x50,0x0,0xb4,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xb4,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,
0x2,0x0,0x0,0x20,0xa,0x0,0x50,0x0,
0x8,0x0,0x0,0x0,0x7,0x0,0x0,0x0,
0xc,0x0,0x50,0x0,0x8,0x0,0x0,0x0,
0x0,0x0,0x8,0x0,0x1,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xc,0x0,0x40,0x1,
0xc,0x0,0xd0,0x1,0x6,0x0,0x0,0x0,
0x0,0x0,0x1,0x0,0x1,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xa,0x0,0x30,0x1,
0xa,0x0,0xb0,0x1,0xd,0x0,0x0,0x0,
0x0,0x0,0x9,0x0,0x2,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x14,0x0,0x50,0x0,
0x14,0x0,0xf0,0x0,0x0,0x0,0x0,0x0,
0x7,0x0,0x0,0x0,0x9,0x0,0x0,0x0,
0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xff,
0x0,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x0,0x0,0x2,0x0,
0x54,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x84,0x0,0x0,0x0,0xc,0x0,0xd0,0x1,
0xd,0x0,0x90,0x0,0x84,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x84,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xb,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xf,0x0,0x90,0x0,
0xf,0x0,0x60,0x1,0xa,0x0,0x0,0x0,
0x0,0x0,0x2,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xe,0x0,0x90,0x0,
0xe,0x0,0x30,0x1,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xff,
0x0,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x0,0x0,0x1,0x0,
0x54,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x6c,0x0,0x0,0x0,0x14,0x0,0x50,0x0,
0x0,0x0,0x0,0x0,0x6c,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x6c,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xe,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x1,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x14,0x0,0xf0,0x0,
0x14,0x0,0xc0,0x1,0x0,0x0,0x0,0x0
};
QT_WARNING_PUSH
QT_WARNING_DISABLE_MSVC(4573)

template <typename Binding>
void wrapCall(const QQmlPrivate::AOTCompiledContext *aotContext, void *dataPtr, void **argumentsPtr, Binding &&binding)
{
    using return_type = std::invoke_result_t<Binding, const QQmlPrivate::AOTCompiledContext *, void **>;
    if constexpr (std::is_same_v<return_type, void>) {
       Q_UNUSED(dataPtr)
       binding(aotContext, argumentsPtr);
    } else {
        if (dataPtr) {
           new (dataPtr) return_type(binding(aotContext, argumentsPtr));
        } else {
           binding(aotContext, argumentsPtr);
        }
    }
}
extern const QQmlPrivate::TypedFunction aotBuiltFunctions[];
extern const QQmlPrivate::TypedFunction aotBuiltFunctions[] = {
{ 0, QMetaType::fromType<void>(), {  }, 
    [](const QQmlPrivate::AOTCompiledContext *context, void *data, void **argv) {
        wrapCall(context, data, argv, [](const QQmlPrivate::AOTCompiledContext *aotContext, void **argumentsPtr) {
Q_UNUSED(aotContext)
Q_UNUSED(argumentsPtr)
// expression for onTriggered at line 15, column 9
QObject *r2_0;
QObject *r7_0;
// generate_CreateCallContext
{
// generate_LoadQmlContextPropertyLookup
while (!aotContext->loadSingletonLookup(0, &r2_0)) {
aotContext->setInstructionPointer(3);
aotContext->initLoadSingletonLookup(0, QQmlPrivate::AOTCompiledContext::InvalidStringId);
if (aotContext->engine->hasError())
    return ;
}
// generate_StoreReg
r7_0 = r2_0;
// generate_CallPropertyLookup
{
void *args[] = { nullptr };
const QMetaType types[] = { QMetaType() };
while (!aotContext->callObjectPropertyLookup(1, r7_0, args, types, 0)) {
aotContext->setInstructionPointer(10);
aotContext->initCallObjectPropertyLookup(1);
if (aotContext->engine->hasError())
    return ;
}
}
// generate_PopContext
;}
// generate_Ret
return;
});}
 },{ 1, QMetaType::fromType<void>(), {  }, 
    [](const QQmlPrivate::AOTCompiledContext *context, void *data, void **argv) {
        wrapCall(context, data, argv, [](const QQmlPrivate::AOTCompiledContext *aotContext, void **argumentsPtr) {
Q_UNUSED(aotContext)
Q_UNUSED(argumentsPtr)
// expression for onCompleted at line 20, column 5
QUrl r2_1;
QObject *r11_0;
QObject *r2_0;
QObject *r7_0;
bool r2_3;
QString r2_2;
QUrl r14_0;
QString r10_0;
// generate_CreateCallContext
{
// generate_LoadQmlContextPropertyLookup
while (!aotContext->loadSingletonLookup(2, &r2_0)) {
aotContext->setInstructionPointer(3);
aotContext->initLoadSingletonLookup(2, QQmlPrivate::AOTCompiledContext::InvalidStringId);
if (aotContext->engine->hasError())
    return ;
}
// generate_StoreReg
r7_0 = r2_0;
// generate_LoadQmlContextPropertyLookup
while (!aotContext->loadSingletonLookup(3, &r2_0)) {
aotContext->setInstructionPointer(7);
aotContext->initLoadSingletonLookup(3, QQmlPrivate::AOTCompiledContext::InvalidStringId);
if (aotContext->engine->hasError())
    return ;
}
// generate_StoreReg
r11_0 = r2_0;
// generate_LoadRuntimeString
r2_1 = QUrl(QStringLiteral("EventListModel.qml"));
// generate_StoreReg
r14_0 = r2_1;
// generate_CallPropertyLookup
{
QUrl retrieved;
{
QUrl callResult;
void *args[] = { &callResult, &r14_0 };
const QMetaType types[] = { QMetaType::fromType<QUrl>(), QMetaType::fromType<QUrl>() };
while (!aotContext->callObjectPropertyLookup(4, r11_0, args, types, 1)) {
aotContext->setInstructionPointer(18);
aotContext->initCallObjectPropertyLookup(4);
if (aotContext->engine->hasError())
    return ;
}
retrieved = std::move(callResult);
}
r2_2 = retrieved.toString();
}
// generate_StoreReg
r10_0 = r2_2;
// generate_CallPropertyLookup
{
void *args[] = { nullptr, &r10_0 };
const QMetaType types[] = { QMetaType(), QMetaType::fromType<QString>() };
while (!aotContext->callObjectPropertyLookup(5, r7_0, args, types, 1)) {
aotContext->setInstructionPointer(25);
aotContext->initCallObjectPropertyLookup(5);
if (aotContext->engine->hasError())
    return ;
}
}
// generate_LoadQmlContextPropertyLookup
while (!aotContext->loadContextIdLookup(6, &r2_0)) {
aotContext->setInstructionPointer(27);
aotContext->initLoadContextIdLookup(6);
if (aotContext->engine->hasError())
    return ;
}
// generate_GetLookup
while (!aotContext->getObjectLookup(7, r2_0, &r2_3)) {
aotContext->setInstructionPointer(29);
aotContext->initGetObjectLookup(7, r2_0, QMetaType::fromType<bool>());
if (aotContext->engine->hasError())
    return ;
}
// generate_JumpFalse
if (!r2_3) {
    goto label_0;
}
;
// generate_LoadQmlContextPropertyLookup
while (!aotContext->loadContextIdLookup(8, &r2_0)) {
aotContext->setInstructionPointer(33);
aotContext->initLoadContextIdLookup(8);
if (aotContext->engine->hasError())
    return ;
}
// generate_StoreReg
r7_0 = r2_0;
// generate_CallPropertyLookup
{
void *args[] = { nullptr };
const QMetaType types[] = { QMetaType() };
while (!aotContext->callObjectPropertyLookup(9, r7_0, args, types, 0)) {
aotContext->setInstructionPointer(40);
aotContext->initCallObjectPropertyLookup(9);
if (aotContext->engine->hasError())
    return ;
}
}
label_0:;
// generate_PopContext
;}
// generate_Ret
return;
});}
 },{ 0, QMetaType::fromType<void>(), {}, nullptr }};
QT_WARNING_POP
}
}
